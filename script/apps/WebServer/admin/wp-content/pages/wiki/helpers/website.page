<?npl
--[[
Title: get website from database
Author: LiXizhi
Date: 2016/5/30
Desc: 
]]
if(not db) then	
	include_once(WIKI_ROOT.."config/db.page");
end
include_once(WIKI_ROOT.."config/buildin.page");
include_once(WIKI_ROOT.."models/project.page");

-- current project
local current_proj = {};

-- current website {url="", host="", stars=number, is_stared=boolean}
local curSite;

-- get website url and host from name
-- @return buildin_site {url, host}
-- such as {url="LiXizhi/wiki", host="github", name=string}
-- it can also be the project's wiki {url="LiXizhi/NPLRuntime/wiki", host="github", stars=number, is_stared=boolean}
function getWebsite(sitename)
	sitename = sitename or "wiki";
	local site = buildin_website[string.lower(sitename)];
	if(not site) then
		local projs = models.project:new():get({name=sitename});
		if(projs and projs[1]) then
			local proj = projs[1];
			local store = proj.store;
			if(store) then
				local url = store:match("^%w+://github%.com/(.+)$")
				if(url) then
					current_proj = proj;
					site = {url=url, host="github", name=proj.name, stars=proj.stars};
				end
			end
		end
	end
	curSite = site;
	return site;
end

-- @return rootUrl, projectName
function getSiteRootURL(site)
	if(site and site.url) then
		if(not site.host or site.host == "github") then
			local rootUrl;
			local siteName, projectName, wiki = site.url:match("^/?([^/]+)/([^/]+)/?(.*)")
			if(wiki == "wiki") then
				rootUrl = "https://raw.githubusercontent.com/wiki/"..siteName.."/"..projectName.."/";
			else
				rootUrl = "https://raw.githubusercontent.com/"..siteName.."/"..projectName.."/master/";
			end
			return rootUrl, projectName, (site.name or projectName);
		else
			-- TODO other database store like coding.net?
		end
	end
end

local siteName, pageName, isSingleSite;
function SetWikiPage(siteName_, pageName_)
	siteName, pageName = siteName_ or siteName, pageName_ or pageName;
end

function GetSiteName()
	return siteName;
end

function GetPageName()
	return pageName;
end

-- whether this web site is mapped via CNAME
function IsSingleSite()
	return isSingleSite;
end

-- get the current project or just return an empty table
function GetProject()
	return current_proj;
end

-- server side pre-calculation here:
-- calculate website name and page name from current url
function RenderServerWikiScript()
	if(not siteName or not pageName) then
		local siteName_ = (request:GetHost() or ""):match("([%w]+)%.[%w]+%.[%w]+");
		isSingleSite = false;
		if(siteName_ and siteName_~="www") then
			isSingleSite = true;
			siteName = siteName_;
			pageName = request:url():match("^/?([^/]*)");	
		else
			local url = commonlib.Encoding.url_decode(request:url());
			siteName, pageName = url:match("^/?([^/]+)/?([^/]*)");	
			if(not siteName) then
				siteName, pageName = "wiki", "home"
			end
		end
	end
	if(siteName) then
		local rootUrl, projectName, siteName = getSiteRootURL(getWebsite(siteName));
		if(rootUrl) then
			curSite.siteName = siteName;
			curSite.pageName = pageName;
			curSite.rootUrl = rootUrl;
			curSite.isSingleSite = isSingleSite;
			curSite.project_id = GetProject()._id or -1;
			echo(format("<script>window.siteInfo = %s;</script>", json_encode(curSite)));
		end
	end
end

-- server side cached content for google agent and special wiki/* pages, etc. 
-- @note: `wiki/*` is mapped to predefined pages at `wiki/pages/*.page`
-- @note: `[name]/_XXX` is mapped to predefined pages at `wiki/pages/special/_XXX.page`
function RenderServerWikiContent()
	if(GetSiteName() == "wiki") then
		local filename = WP_CONTENT_DIR .. '/pages/wiki/pages/' .. GetPageName() .. ".page";
		if(file_exists(filename)) then
			include(filename);
			echo("<script>window.skipClientWiki = true;</script>")
		end
	end
	if(pageName and pageName:match("^_")) then
		local filename = WP_CONTENT_DIR .. '/pages/wiki/pages/special/' .. pageName:gsub("^_", "") .. ".page";
		if(file_exists(filename)) then
			include(filename);
			echo("<script>window.skipClientWiki = true;</script>")
		end
	end
end