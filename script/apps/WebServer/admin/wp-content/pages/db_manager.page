<?npl
--[[
Title: table database manager
Author: LiXizhi
Date: 2016/7/3
Desc: 
]]
if(not is_admin()) then
  exit("access denied")
end

if(is_ajax()) then
	NPL.load("(gl)script/ide/Files.lua");
	NPL.load("(gl)script/ide/System/Database/TableDatabase.lua");
	NPL.load("(gl)script/apps/WebServer/mem_cache.lua");

	local TableDatabase = commonlib.gettable("System.Database.TableDatabase");
	local obj_cache = commonlib.gettable("WebServer.mem_cache"):GetInstance();
	local params = request:getparams();
	local getDBPath = function() return obj_cache:get("db_path") end
 
	-- db_handle:EnableSyncMode(true);
	add_action('wp_ajax_curd',function()
		local db_handle = TableDatabase:new():connect(getDBPath(), function() end);
		local tableName = params.tableName;
		local operation = params.operation;
		local query = params.query;
		local update = params.update;
		local table = db_handle:collection(tableName);

		if (operation == "select") then
			table:find(query, function(err,rows) resume(err,rows) end);
		elseif (operation == "insert") then
			table:insertOne(query, update, function(err, rows) resume(err, rows) end);
		elseif (operation == "update") then
			table:updateOne(query, update, function(err, rows) resume(err, rows) end);
		elseif (operation == "delete") then
			table:deleteOne(query, resume);
		else
			return "parament error";
		end

		err, rows = yield();
		if err then
			wp_send_json(err);
		else
			wp_send_json(rows);
		end
	end)

	add_action('wp_ajax_tableIndexes', function()
		local db_handle = TableDatabase:new():connect(getDBPath(), function() end);
		local tableName = params.tableName;
		local table = db_handle:collection(tableName);
		table:exec("SELECT name as indexName FROM indexes;", function(err, rows) resume(err, rows) end)
		-- table:find({}, function(err,rows) resume(err,rows) end);
		err, rows = yield();
		if err then
			wp_send_json(err);
		else
			wp_send_json(rows);
		end
	end)

	add_action('wp_ajax_setDBPath', function() 
		local dbPath = params.dbPath;
		if (string.sub(dbPath, string.len(dbPath)) ~= '/') then
			dbPath = dbPath .. '/';
		end
		obj_cache:set("db_path", dbPath);
		db_handle = TableDatabase:new():connect(dbPath, function() end);
	end)

	add_action('wp_ajax_getDBPath', function()
		wp_send_json(getDBPath());
	end)

	add_action('wp_ajax_tables', function() 
		local tableNames = {};
		local databaseDir = getDBPath();
		local files = commonlib.Files.Find(nil, databaseDir, 0, 500, "*.db", nil);
		if files then
			for i, file in ipairs(files) do
				tableNames[#tableNames+1] = string.match(file.filename,"(.*)%.");
			end
		end
		wp_send_json(tableNames);
	end) 
	return;
end
wp_enqueue_script("jqueryui", "/wp-includes/js/jquery/jquery-ui.min.js"); 
wp_enqueue_script("bootstrap", "/wp-includes/js/bootstrap/js/bootstrap.min.js");
wp_enqueue_script("angular", "/wp-includes/js/angular/angular.min.js");
?>
<div style="width:100%;">
    <div ng-app="DBManager" ng-controller="DBManagerCtrl">
        <div>
            <form class="form-horizontal" role="form">
                <div class="form-group">
                    <label class="control-label col-md-5">DB路径设置: </label>
                    <div class="col-md-2">
                        <input type="text" class="form-control" ng-model="dbPath" placeholder="数据库文件所在目录"/>
                    </div>
                    <button class="btn" ng-click="setDBPath()">设置</button>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">请选择表:</label>
                    <div class="col-md-2">
                        <select class="form-control" ng-model="selectedTable"
                                ng-options="table for table in tables"></select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">操作:</label>
                    <div class="col-md-2">
                        <select class="form-control" ng-model="selectedOperation">
                            <option ng-repeat="x in operations" value="{{x.value}}">{{x.display}}</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="control-label col-md-5">参数</label>
                    <div class="col-md-1">
                        <input type="text" class="form-control" ng-model="key" placeholder="key">
                    </div>
                    <div class="col-md-1">
                        <input type="text" class="form-control" ng-model="value" placeholder="value">
                    </div>
                    <div class="col-md-1"><button class="btn"  ng-click="addParam()">添加</button></div>
                </div>
                <div class="form-group" ng-repeat="param in params">
                    <label class="control-label col-md-5">{{"参数"+($index+1)+": "}}</label>
                    <div class="col-md-1">
                        <input type="text" class="form-control" ng-model="param.key">
                    </div>
                    <div class="col-md-1">
                        <input type="text" class="form-control"ng-model="param.value">
                    </div>
                    <div class="col-md-1"><button class="btn"  ng-click="deleteParam(param)">删除</button></div>
                </div>
                <div class="form-group">
                    <div class="col-md-offset-5 col-md-2">
                        <button class="btn form-control" style="background: gainsboro" ng-click="select()">提交</button>
                    </div>
                </div>
            </form>
        </div>
        <div>
            <div class="col-md-offset-5 col-md-2"><h4>结果：</h4></div>
            <table class="table table-striped">
                <tr ng-repeat="record in tableRecord">
                    <td ng-if="isEdit">
                        <button class="btn" ng-click="update(record)">修改</button>
                        <button class="btn" ng-click="delete(record)">删除</button>
                    </td>
                    <td ng-repeat="field in record"><span>{{field.key}}:<input ng-model="field.value"/></span></td>
                </tr>
            </table>
        </div>
    </div>
</div>

<script>
    var app = angular.module("DBManager", []);
    var urlPrefix = '/ajax/db_manager?action=';
    app.controller("DBManagerCtrl", function ($scope, $http) {
		if(typeof Page != 'undefined')
            Page.ShowSideBar(false);
        $scope.operations = [{value: "select", display: '查询'}, {
            value: "insert",
            display: '添加'
        }, {
            value: "selectIndex",
            display: '查询索引'
        }/*, {value:"update",display:'修改'}, {value:"delete", display:'删除'}*/];
        $scope.selectedOperation = "select";
        $scope.isEdit = true;
        $scope.selectedTable = "";
        $scope.tables = [];
        $scope.params = [];
        $scope.output = undefined;

        $scope.getTables = function () {
            $http({url: urlPrefix + 'tables', method: "POST"}).then(function (response) {
                $scope.tables = response.data;
            }).catch(function (response) {
                console.log("http request error")
            });
        }
        $scope.getTables();

        $http({url: urlPrefix + 'getDBPath', method: "POST"}).then(function (response) {
            $scope.dbPath = response.data;
        }).catch(function (response) {
            console.log("http request error")
        });

        $scope.setDBPath = function () {
            $http({url: urlPrefix + 'setDBPath', method: "POST", data: {dbPath: $scope.dbPath}});
            $scope.getTables();
        }

        $scope.select = function () {
            /*
             if ($scope.selectedOperation == "selectIndex") {
             return $scope.selectIndex();
             }*/
            if ($scope.selectedOperation == "insert") {
                return $scope.insert();
            }
            var params = {operation: "select", tableName: $scope.selectedTable, query: {}, update: {}}
            for (i = 0; i < $scope.params.length; i++) {
                params["query"][$scope.params[i].key] = getJsonObject($scope.params[i].value);
            }
            var url = urlPrefix + 'curd';
            $scope.isEdit = true;
            if ($scope.selectedOperation == "selectIndex") {
                params.operation = "selectIndex";
                url = urlPrefix + 'tableIndexes';
                $scope.isEdit = false;
            }
            $http({url: url, method: "POST", data: params})
                    .then(function (response) {
                        //console.log(response.data);
                        $scope.tableRecord = response.data.map(function (record) {
                            return $scope.objectToArray(record);
                        });
                    }).catch(function (response) {
                console.log("http request error")
            });
        }

        $scope.selectIndex = function () {
            var params = {operation: "selectIndex", tableName: $scope.selectedTable, query: {}, update: {}}
            $http({url: urlPrefix + 'curd', method: "POST", data: params}).then(function (response) {
                $scope.indexes = response.data;
            }).catch(function (response) {
                console.log("http request error")
            });
        }

        $scope.insert = function () {
            var params = {operation: "insert", tableName: $scope.selectedTable, query: {}, update: {}}
            for (i = 0; i < $scope.params.length; i++) {
                params["update"][$scope.params[i].key] = getJsonObject($scope.params[i].value);
            }
            $http({url: urlPrefix + 'curd', method: "POST", data: params});
            $scope.selectedOperation = "select";
            $scope.params = [];
            $scope.select();
        }
        $scope.update = function (record) {
            var params = {operation: "update", tableName: $scope.selectedTable, query: {}, update: {}}
            for (i = 0; i < record.length; i++) {
                params["update"][record[i].key] = record[i].value;
                if (record[i].key == "_id") {
                    params["query"][record[i].key] = record[i].value;
                }
            }
            $http({url: urlPrefix + 'curd', method: "POST", data: params});
            $scope.select();
        }

        $scope.delete = function (record) {
            var recordObj = $scope.arrayToObject(record);
            var params = {operation: "delete", tableName: $scope.selectedTable, query: {}}
            params["query"]["_id"] = recordObj._id;
            $http({url: urlPrefix + 'curd', method: "POST", data: params});
            $scope.select();
        }

        $scope.addParam = function () {
            $scope.params.push({key: $scope.key, value: $scope.value});
            $scope.key = "";
            $scope.value = "";
        }

        $scope.deleteParam = function (param) {
            let params = [];
            for (i = 0; i < $scope.params.length; i++) {
                if ($scope.params[i].key == param.key && $scope.params[i].value == param.value) {
                    continue;
                } else {
                    params.push($scope.params[i]);
                }
            }
            $scope.params = params;
        }

        $scope.objectToArray = function (obj) {
            var arr = [];
            for (key in obj) {
                arr.push({key: key, value: obj[key], _id: obj._id});
            }
            return arr;
        }

        $scope.arrayToObject = function (arr) {
            var obj = {};
            for (i = 0; i < arr.length; i++) {
                obj[arr[i].key] = arr[i].value;
            }
            return obj;
        }

        function getJsonObject(str) {
            try{
                return JSON.parse(str);
            } catch(e) {
                return str;
            }
        }
    });
</script>