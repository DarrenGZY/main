<?npl
--[[
Title: markdown parser
Author: leio
Date: 2016/5/10
Desc: 
]]
wp_enqueue_script("ace", "/wp-includes/js/ace/ace.js");
wp_enqueue_script("angular", "/wp-includes/js/angular/angular.min.js");
wp_enqueue_script("jqueryui", "/wp-includes/js/jquery/jquery-ui.min.js"); 
wp_enqueue_style("jqueryui_css", "/wp-includes/js/jquery/jquery-ui.min.css");
wp_enqueue_script("markdown-it", "/wp-includes/js/markdown-it/markdown-it.min.js");
?>
<script>
var getUrlParameter = function getUrlParameter(sParam) {
    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=');

        if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined ? true : sParameterName[1];
        }
    }
};
var source = getUrlParameter("source");
//var source = "https://github.com/LiXizhi/ParaCraft/raw/gh-pages/readme.md"
//var source = "https://raw.githubusercontent.com/LiXizhi/ParaCraft/gh-pages/readme.md"
var md = window.markdownit('commonmark');

angular.module('MarkdownParser', [])
 .controller('MarkdownController', function ($scope, $http) {

	$scope.load = function(url){
		$http({
		  method: 'GET',
		  url: url,
		}).then(function successCallback(response) { 
			if(response.status == 200){
				var s = md.render(response.data);
				$(".result-html").html(s);
			}else{
				$(".result-html").html("<p>error</p>");
			}
		  }, function errorCallback(response) {
				$(".result-html").html("<p>load failed.</p>");
		  });
	}
	$scope.load(source);
});
</script>
<div ng-app="MarkdownParser" ng-controller="MarkdownController">
	<div class="result-html"></div>
</div>

