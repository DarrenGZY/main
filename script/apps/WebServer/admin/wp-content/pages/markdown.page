<?npl
--[[
Title: markdown parser
Author: leio
Date: 2016/5/10
Desc: 

// wiki format [[电影方块教学课程|MovieBlockTutorials]]
--http://localhost:8099/markdown?wiki=https://github.com/LiXizhi/ParaCraft/wiki
--]]
wp_enqueue_script("ace", "/wp-includes/js/ace/ace.js");
wp_enqueue_script("angular", "/wp-includes/js/angular/angular.min.js");
wp_enqueue_script("jqueryui", "/wp-includes/js/jquery/jquery-ui.min.js"); 
wp_enqueue_style("jqueryui_css", "/wp-includes/js/jquery/jquery-ui.min.css");
wp_enqueue_script("markdown-it", "/wp-includes/js/markdown-it/markdown-it.min.js");
?>
<script>
function getUrlParameter(sParam) {
    var sPageURL = decodeURIComponent(window.location.search.substring(1)),
        sURLVariables = sPageURL.split('&'),
        sParameterName,
        i;

    for (i = 0; i < sURLVariables.length; i++) {
        sParameterName = sURLVariables[i].split('=');

        if (sParameterName[0] === sParam) {
            return sParameterName[1] === undefined ? true : sParameterName[1];
        }
    }
};
var origin = window.location.origin;
var github_home = "https://github.com";
var author;
var repository;
var wiki = getUrlParameter("wiki");
var source = getRawUrl(wiki);
function replaceMarkdown(data){
	if(!data){
		return
	}
	function replacer(match,p1,p2,offset,string){
		var wiki = origin + "/markdown?wiki=" + getPageUrl(p2);
		var s = "[" + p1 + "](" + wiki + ")";
		return s;
	}
	
	var re = /\[\[([\u4E00-\u9FA5\uF900-\uFA2Da-zA-Z0-9]+)\|(\w+)\]\]/g;
	//var re = /\[\[([\u4E00-\uFA29]+|[\uE7C7-\uE7F3]+|\w+)\|(\w+)\]\]/g;
	var newstr = data.replace(re, replacer);
	return newstr
}
function getRawUrl(wiki){
	var rowTitle = "https://raw.githubusercontent.com";
	var url;
	function replacer(match,p1,p2,p3,p4,offset,string){
		author = p2;
		repository = p3;
		if(!p4){
			p4 = "Home";
			url = rowTitle + "/wiki/" + p2 + "/" + p3 + "/" + p4 + ".md";

		}else
		{
			url = rowTitle + "/wiki/" + p2 + "/" + p3 + "/" + p4 + ".md";
		}
	}
	var re = /(\w+)\/(\w+)\/(\w+)\/wiki\/?(\w*)/
	wiki.replace(re, replacer);
	return url
}
function getPageUrl(pageName){
	if(!pageName){
		pageName = "Home";
	}
	return github_home + "/" + author + "/" + repository + "/wiki/" + pageName;
}
// var wiki = "https://github.com/LiXizhi/ParaCraft/wiki"
// var wiki = "https://github.com/LiXizhi/ParaCraft/wiki/MovieBlockTutorials"
//var source = "https://github.com/LiXizhi/ParaCraft/raw/gh-pages/readme.md"
//var source = "https://raw.githubusercontent.com/LiXizhi/ParaCraft/gh-pages/readme.md"
//var source = "https://raw.githubusercontent.com/wiki/LiXizhi/Paracraft/Home.md"
// var home = "https://github.com/LiXizhi/ParaCraft"

var md = window.markdownit('commonmark');

angular.module('MarkdownParser', [])
 .controller('MarkdownController', function ($scope, $http) {

	$scope.load = function(url){
		$http({
		  method: 'GET',
		  url: url,
		}).then(function successCallback(response) { 
			if(response.status == 200){
				var s = replaceMarkdown(response.data);
				s = md.render(s);
				$(".result-html").html(s);
			}else{
				$(".result-html").html("<p>error</p>");
			}
		  }, function errorCallback(response) {
				$(".result-html").html("<p>load failed.</p>");
		  });
	}
	$scope.load(source);
});
</script>
<div ng-app="MarkdownParser" ng-controller="MarkdownController">
	<div class="result-html"></div>
</div>

